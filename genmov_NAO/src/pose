#!/usr/bin/env python3
import rospy
from sensor_msgs.msg import JointState
from markers import *
from nao_functions import *

if __name__ == '__main__':
    # Initialize the node
    rospy.init_node("NAO_pose")
    # Publisher: publish to the joint_states topic
    pub = rospy.Publisher('joint_states', JointState, queue_size=10)
    
    # Instance of the JointState message
    jstate = JointState()
    
     # Joint names
    jnames = (
    "HeadYaw","HeadPitch",
    "LHipYawPitch","LHipRoll","LHipPitch","LKneePitch","LAnklePitch","LAnkleRoll",
    "RHipYawPitch","RHipRoll","RHipPitch","RKneePitch","RAnklePitch","RAnkleRoll",
    "LShoulderPitch","LShoulderRoll","LElbowYaw","LElbowRoll","LWristYaw","LHand",
    "RShoulderPitch","RShoulderRoll","RElbowYaw","RElbowRoll","RWristYaw","RHand",
    "RFinger23","RFinger13","RFinger12",
    "LFinger21","LFinger13","LFinger11",
    "RFinger22","LFinger22","RFinger21","LFinger12","RFinger11","LFinger23",
    "LThumb1","RThumb1","RThumb2","LThumb2")

    # Values of the message
    jstate.header.stamp = rospy.Time.now()
    jstate.name = jnames
    q = [0.0, 0.0, 
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    np.pi/2 , np.pi*2, -np.pi/6, np.pi/2, np.pi/2, np.pi ,
    np.pi/6 , np.pi/6, np.pi , -np.pi/6, 0,0,
    #-np.pi/2 , -np.pi/6 ,0.0 ,0.0 ,0.0, 0.0,
    0.0, 0.0, 0.0,
    0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0]
    jstate.position = q

    # Left arm
    q_left_arm=q[14:20]
    T=fkine_left_arm(q_left_arm)
    x_left_arm = T[0:3,3]
    bmarker_left_arm  = BallMarker(color['RED'])
    bmarker_left_arm.xyz(x_left_arm)

    # Right arm
    q_right_arm=q[20:26]
    T=fkine_right_arm(q_right_arm)
    x_right_arm = T[0:3,3]
    bmarker_right_arm  = BallMarker(color['GREEN'])
    bmarker_right_arm.xyz(x_right_arm)


    # Frequency (in Hz) and control period 
    freq = 20; dt = 1.0/freq; rate = rospy.Rate(freq)
    # Main loop
    while not rospy.is_shutdown():
        jstate.header.stamp = rospy.Time.now()        
        jstate.position = q
        pub.publish(jstate)

        # Left Arm
        T_left=fkine_left_arm(q_left_arm)
        x_left_arm = T_left[0:3,3]
        bmarker_left_arm.xyz(x_left_arm)
        
        # Right Arm
        T_right=fkine_right_arm(q_right_arm)
        x_right_arm = T_right[0:3,3]
        bmarker_right_arm.xyz(x_right_arm)

        print(x_right_arm)

        print("Pose")
        rate.sleep()
        